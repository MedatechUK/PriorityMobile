//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4206
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.4206.
// 
#pragma warning disable 1591

namespace Csh_Example.PriWebSVC {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://priwebsvc.ntsa.org.uk/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LoadDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadDataWaitOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveSignatureOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::Csh_Example.Properties.Settings.Default.Csh_Example_PriWebSVC_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LoadDataCompletedEventHandler LoadDataCompleted;
        
        /// <remarks/>
        public event LoadDataWaitCompletedEventHandler LoadDataWaitCompleted;
        
        /// <remarks/>
        public event GetDataCompletedEventHandler GetDataCompleted;
        
        /// <remarks/>
        public event SaveSignatureCompletedEventHandler SaveSignatureCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://priwebsvc.ntsa.org.uk/LoadData", RequestNamespace="http://priwebsvc.ntsa.org.uk/", ResponseNamespace="http://priwebsvc.ntsa.org.uk/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool LoadData(string SerialData) {
            object[] results = this.Invoke("LoadData", new object[] {
                        SerialData});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LoadDataAsync(string SerialData) {
            this.LoadDataAsync(SerialData, null);
        }
        
        /// <remarks/>
        public void LoadDataAsync(string SerialData, object userState) {
            if ((this.LoadDataOperationCompleted == null)) {
                this.LoadDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadDataOperationCompleted);
            }
            this.InvokeAsync("LoadData", new object[] {
                        SerialData}, this.LoadDataOperationCompleted, userState);
        }
        
        private void OnLoadDataOperationCompleted(object arg) {
            if ((this.LoadDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadDataCompleted(this, new LoadDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://priwebsvc.ntsa.org.uk/LoadDataWait", RequestNamespace="http://priwebsvc.ntsa.org.uk/", ResponseNamespace="http://priwebsvc.ntsa.org.uk/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadDataWait(string BubbleID, string SerialData) {
            object[] results = this.Invoke("LoadDataWait", new object[] {
                        BubbleID,
                        SerialData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadDataWaitAsync(string BubbleID, string SerialData) {
            this.LoadDataWaitAsync(BubbleID, SerialData, null);
        }
        
        /// <remarks/>
        public void LoadDataWaitAsync(string BubbleID, string SerialData, object userState) {
            if ((this.LoadDataWaitOperationCompleted == null)) {
                this.LoadDataWaitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadDataWaitOperationCompleted);
            }
            this.InvokeAsync("LoadDataWait", new object[] {
                        BubbleID,
                        SerialData}, this.LoadDataWaitOperationCompleted, userState);
        }
        
        private void OnLoadDataWaitOperationCompleted(object arg) {
            if ((this.LoadDataWaitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadDataWaitCompleted(this, new LoadDataWaitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://priwebsvc.ntsa.org.uk/GetData", RequestNamespace="http://priwebsvc.ntsa.org.uk/", ResponseNamespace="http://priwebsvc.ntsa.org.uk/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetData(string SQL, string Env) {
            object[] results = this.Invoke("GetData", new object[] {
                        SQL,
                        Env});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataAsync(string SQL, string Env) {
            this.GetDataAsync(SQL, Env, null);
        }
        
        /// <remarks/>
        public void GetDataAsync(string SQL, string Env, object userState) {
            if ((this.GetDataOperationCompleted == null)) {
                this.GetDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataOperationCompleted);
            }
            this.InvokeAsync("GetData", new object[] {
                        SQL,
                        Env}, this.GetDataOperationCompleted, userState);
        }
        
        private void OnGetDataOperationCompleted(object arg) {
            if ((this.GetDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataCompleted(this, new GetDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://priwebsvc.ntsa.org.uk/SaveSignature", RequestNamespace="http://priwebsvc.ntsa.org.uk/", ResponseNamespace="http://priwebsvc.ntsa.org.uk/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveSignature(string SerialData) {
            object[] results = this.Invoke("SaveSignature", new object[] {
                        SerialData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveSignatureAsync(string SerialData) {
            this.SaveSignatureAsync(SerialData, null);
        }
        
        /// <remarks/>
        public void SaveSignatureAsync(string SerialData, object userState) {
            if ((this.SaveSignatureOperationCompleted == null)) {
                this.SaveSignatureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveSignatureOperationCompleted);
            }
            this.InvokeAsync("SaveSignature", new object[] {
                        SerialData}, this.SaveSignatureOperationCompleted, userState);
        }
        
        private void OnSaveSignatureOperationCompleted(object arg) {
            if ((this.SaveSignatureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveSignatureCompleted(this, new SaveSignatureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void LoadDataCompletedEventHandler(object sender, LoadDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void LoadDataWaitCompletedEventHandler(object sender, LoadDataWaitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadDataWaitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadDataWaitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetDataCompletedEventHandler(object sender, GetDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void SaveSignatureCompletedEventHandler(object sender, SaveSignatureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveSignatureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveSignatureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591