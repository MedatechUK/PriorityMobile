echo Begin of Upgrade 7.0.23063
DBI <<\EOF
CREATE TABLE ZSFDC_ABC 'Params for SFDC Cycle Count' 0
ABC (CHAR,1,'Char 1')
ABCDES (CHAR,68,'Description')
DAYCOUNT (INT,17,'Daily Count')
UNIQUE (ABC)
;
EOF
BRING << \EOF
18 12 GENERALLOAD10 
56 12 GENERALLOAD124 Table for General Load 10 
19 12 GENERALLOAD11 10 RECORDTYPE4 CHAR3 3 11 Record Type
19 12 GENERALLOAD12 4 LINE3 INT17 8 2 Ln
33 12 GENERALLOAD14 LINE0 48 
19 12 GENERALLOAD13 6 LOADED4 CHAR1 1 7 Loaded?
19 12 GENERALLOAD14 4 KEY14 CHAR20 20 5 Key 1
19 12 GENERALLOAD15 4 KEY24 CHAR20 20 5 Key 2
19 12 GENERALLOAD16 4 KEY34 CHAR20 20 5 Key 3
19 12 GENERALLOAD17 5 TEXT14 CHAR32 32 6 Text 1
19 12 GENERALLOAD18 5 TEXT24 CHAR48 48 6 Text 2
19 12 GENERALLOAD19 5 TEXT34 CHAR48 48 6 Text 3
19 12 GENERALLOAD110 4 INT13 INT17 8 5 Int 1
33 12 GENERALLOAD14 INT10 48 
19 12 GENERALLOAD111 4 INT23 INT17 8 5 Int 2
33 12 GENERALLOAD14 INT20 48 
19 12 GENERALLOAD112 4 INT33 INT17 8 5 Int 3
33 12 GENERALLOAD14 INT30 48 
19 12 GENERALLOAD113 5 CHAR14 CHAR1 1 6 Char 1
19 12 GENERALLOAD114 5 CHAR24 CHAR1 1 6 Char 2
19 12 GENERALLOAD115 5 CHAR34 CHAR1 1 6 Char 3
19 12 GENERALLOAD116 5 CHAR44 CHAR1 1 6 Char 4
19 12 GENERALLOAD117 4 TEXT4 CHAR68 68 7 Remarks
19 12 GENERALLOAD118 4 INT43 INT17 8 4 INT4
33 12 GENERALLOAD14 INT40 48 
19 12 GENERALLOAD119 4 INT53 INT17 8 4 INT5
33 12 GENERALLOAD14 INT50 48 
19 12 GENERALLOAD120 4 INT63 INT17 8 4 INT6
33 12 GENERALLOAD14 INT60 48 
19 12 GENERALLOAD121 4 INT73 INT17 8 4 INT7
33 12 GENERALLOAD14 INT70 48 
19 12 GENERALLOAD122 4 INT83 INT17 8 4 INT8
33 12 GENERALLOAD14 INT80 48 
19 12 GENERALLOAD123 5 REAL14 REAL16 8 5 REAL1
33 12 GENERALLOAD15 REAL12 50 
19 12 GENERALLOAD124 5 REAL24 REAL16 8 5 REAL2
33 12 GENERALLOAD15 REAL22 50 
19 12 GENERALLOAD125 5 REAL34 REAL22 8 5 REAL3
33 12 GENERALLOAD15 REAL35 53 
19 12 GENERALLOAD126 5 REAL44 REAL22 8 5 REAL4
33 12 GENERALLOAD15 REAL45 53 
19 12 GENERALLOAD127 5 REAL54 REAL16 8 5 REAL5
33 12 GENERALLOAD15 REAL52 50 
19 12 GENERALLOAD128 5 REAL64 REAL16 8 5 REAL6
33 12 GENERALLOAD15 REAL62 50 
19 12 GENERALLOAD129 5 TEXT44 CHAR22 22 5 TEXT4
19 12 GENERALLOAD130 5 TEXT54 CHAR22 22 5 TEXT5
19 12 GENERALLOAD131 5 TEXT64 CHAR20 20 5 TEXT6
19 12 GENERALLOAD132 5 DATE14 DATE14 8 5 DATE1
19 12 GENERALLOAD133 5 DATE24 DATE14 8 5 DATE2
19 12 GENERALLOAD134 5 DATE34 DATE14 8 5 DATE3
19 12 GENERALLOAD135 5 DATE44 DATE14 8 5 DATE4
19 12 GENERALLOAD136 5 TEXT74 CHAR68 68 5 TEXT7
19 12 GENERALLOAD137 5 TEXT94 CHAR56 56 5 TEXT9
19 12 GENERALLOAD138 5 TEXT84 CHAR32 32 5 TEXT8
19 12 GENERALLOAD139 4 KEY44 CHAR20 20 5 Key 4
19 12 GENERALLOAD140 5 CHAR54 CHAR1 1 5 CHAR5
19 12 GENERALLOAD141 5 CHAR64 CHAR1 1 5 CHAR6
19 12 GENERALLOAD142 5 CHAR74 CHAR1 1 5 CHAR7
19 12 GENERALLOAD143 5 CHAR84 CHAR1 1 5 CHAR8
19 12 GENERALLOAD144 4 INT93 INT17 8 4 INT9
33 12 GENERALLOAD14 INT90 48 
19 12 GENERALLOAD145 5 INT103 INT17 8 5 INT10
33 12 GENERALLOAD15 INT100 48 
19 12 GENERALLOAD146 5 CHAR94 CHAR1 1 5 CHAR9
19 12 GENERALLOAD147 6 CHAR104 CHAR1 1 6 CHAR10
19 12 GENERALLOAD148 6 CHAR114 CHAR1 1 6 CHAR11
19 12 GENERALLOAD149 6 CHAR124 CHAR1 1 6 CHAR12
19 12 GENERALLOAD150 6 CHAR134 CHAR1 1 6 CHAR13
19 12 GENERALLOAD151 6 CHAR144 CHAR1 1 6 CHAR14
19 12 GENERALLOAD152 6 CHAR154 CHAR1 1 6 CHAR15
19 12 GENERALLOAD153 6 CHAR164 CHAR1 1 6 CHAR16
19 12 GENERALLOAD154 6 CHAR174 CHAR1 1 6 CHAR17
19 12 GENERALLOAD155 6 CHAR184 CHAR1 1 6 CHAR18
19 12 GENERALLOAD156 6 CHAR194 CHAR1 1 6 CHAR19
19 12 GENERALLOAD157 6 CHAR204 CHAR1 1 6 CHAR20
19 12 GENERALLOAD158 5 REAL74 REAL17 8 5 REAL7
33 12 GENERALLOAD15 REAL79 57 
19 12 GENERALLOAD159 9 ZTRX_INT13 INT17 8 17 Shifted Integer 1
33 12 GENERALLOAD19 ZTRX_INT13 51 
19 12 GENERALLOAD160 5 INT113 INT17 8 5 INT11
33 12 GENERALLOAD15 INT110 48 
19 12 GENERALLOAD161 5 INT123 INT17 8 5 INT12
33 12 GENERALLOAD15 INT120 48 
19 12 GENERALLOAD162 5 INT133 INT17 8 5 INT13
33 12 GENERALLOAD15 INT130 48 
19 12 GENERALLOAD163 5 INT143 INT17 8 5 INT14
33 12 GENERALLOAD15 INT140 48 
19 12 GENERALLOAD164 5 INT153 INT17 8 5 INT15
33 12 GENERALLOAD15 INT150 48 
19 12 GENERALLOAD165 6 TEXT104 CHAR20 20 6 TEXT10
20 12 GENERALLOAD185 1 
21 12 GENERALLOAD11 4 LINE1 
20 12 GENERALLOAD178 2 
21 12 GENERALLOAD12 4 INT11 
17 14 ZTRX_LOADCYCLE16 Load Cycle Count12 GENERALLOAD173 0 0 0 0 0 0 99999 
57 20 Internal Development1 
58 1 14 ZTRX_LOADCYCLE73 
59 14 ZTRX_LOADCYCLE73 1 111 DOCUMENTS_C70 0 
59 14 ZTRX_LOADCYCLE73 1 212 TRANSORDER_C70 0 
60 14 ZTRX_LOADCYCLE73 5 DATE111 DOCUMENTS_C70 7 CURDATE0 0 0 0 0 0 
60 14 ZTRX_LOADCYCLE73 4 INT112 TRANSORDER_C70 6 PQUANT0 0 0 0 0 0 
60 14 ZTRX_LOADCYCLE73 5 TEXT111 DOCUMENTS_C70 11 TOWARHSNAME0 0 0 0 0 0 
60 14 ZTRX_LOADCYCLE73 5 TEXT211 DOCUMENTS_C70 9 TOLOCNAME0 0 0 0 0 0 
60 14 ZTRX_LOADCYCLE73 5 TEXT312 TRANSORDER_C70 8 PARTNAME0 0 0 0 0 0 
60 14 ZTRX_LOADCYCLE73 5 TEXT412 TRANSORDER_C70 10 TOCUSTNAME0 0 0 0 0 0 
60 14 ZTRX_LOADCYCLE73 5 TEXT512 TRANSORDER_C70 12 TOSERIALNAME0 0 0 0 0 0 
18 9 ZSFDC_ABC0 
56 9 ZSFDC_ABC27 Params for SFDC Cycle Count0 
19 9 ZSFDC_ABC1 3 ABC4 CHAR1 1 6 Char 1
19 9 ZSFDC_ABC2 6 ABCDES4 CHAR68 68 11 Description
19 9 ZSFDC_ABC3 8 DAYCOUNT3 INT17 8 11 Daily Count
33 9 ZSFDC_ABC8 DAYCOUNT0 48 
20 9 ZSFDC_ABC85 1 
21 9 ZSFDC_ABC1 3 ABC1 
17 9 ZSFDC_ABC27 Params for SFDC Cycle Count9 ZSFDC_ABC70 0 0 0 78 4 SFDC0 0 
57 20 Internal Development1 
58 1 9 ZSFDC_ABC70 
13 9 ZSFDC_ABC70 9 ZSFDC_ABC3 ABC0 3 ABC0 0 1 0 10 0 0 0 0 0 0 0 1 
13 9 ZSFDC_ABC70 9 ZSFDC_ABC6 ABCDES0 6 ABCDES0 0 68 0 20 0 0 0 0 0 0 0 1 
13 9 ZSFDC_ABC70 9 ZSFDC_ABC8 DAYCOUNT0 8 DAYCOUNT0 0 17 48 30 0 0 0 0 0 0 0 1 
17 11 ZTRX_PREPCC16 Prepare ABC Type0 80 0 0 0 0 3 TMP0 11467407 
57 17 Inventory Control5 
58 5 11 ZTRX_PREPCC80 
22 11 ZTRX_PREPCC80 9 HELP-FORM70 63 Run this report to view current inventory values for all parts,1 1 
22 11 ZTRX_PREPCC80 9 HELP-FORM70 55 sorted by ABC class. Inventory values can be calculated2 2 
22 11 ZTRX_PREPCC80 9 HELP-FORM70 62 according to last prices, standard costs or actual part costs.3 3 
22 11 ZTRX_PREPCC80 9 HELP-FORM70 5 \n \n4 4 
22 11 ZTRX_PREPCC80 9 HELP-FORM70 9 Notes: \n5 5 
22 11 ZTRX_PREPCC80 9 HELP-FORM70 58 - You can determine the percentile value for each class by6 6 
22 11 ZTRX_PREPCC80 9 HELP-FORM70 55 revising the values of the Class A, Class B and Class C7 7 
22 11 ZTRX_PREPCC80 9 HELP-FORM70 39 constants, in the {FNCCONST.F} form. \n8 8 
22 11 ZTRX_PREPCC80 9 HELP-FORM70 62 - Before running the report on the basis of actual part costs,9 9 
22 11 ZTRX_PREPCC80 9 HELP-FORM70 61 make sure the {FNCCOSTINGPART.P} program was run today, so as10 10 
22 11 ZTRX_PREPCC80 9 HELP-FORM70 24 to use up-to-date costs.11 11 
7 11 ZTRX_PREPCC80 5 5 INPUT66 
28 11 ZTRX_PREPCC80 5 40 SELECT SQL.DATE8 INTO :$.TDT FROM DUMMY;1 1 
28 11 ZTRX_PREPCC80 5 55 SELECT SQL.DATE8 - (365*5*1440) INTO :$.FDT FROM DUMMY;2 2 
9 11 ZTRX_PREPCC80 5 3 FDT0 0 4 DATE0 8 0 0 0 
9 11 ZTRX_PREPCC80 5 3 TDT0 0 4 DATE0 8 0 0 0 
9 11 ZTRX_PREPCC80 5 3 NOA15 Select x type A20 3 INT2 1113 0 0 0 
9 11 ZTRX_PREPCC80 5 3 NOB15 Select x type B30 3 INT1 613 0 0 0 
9 11 ZTRX_PREPCC80 5 3 NOC15 Select x type C40 3 INT1 313 0 0 0 
7 11 ZTRX_PREPCC80 10 3 ABC67 
9 11 ZTRX_PREPCC80 10 3 MOD0 10 3 INT1 10 0 0 0 
9 11 ZTRX_PREPCC80 10 3 FDT0 20 4 DATE0 8 0 0 0 
9 11 ZTRX_PREPCC80 10 3 TDT0 25 4 DATE0 8 0 0 0 
9 11 ZTRX_PREPCC80 10 3 ABC0 30 4 FILE0 0 0 0 0 
7 11 ZTRX_PREPCC80 15 4 SQLI67 
28 11 ZTRX_PREPCC80 15 19 LINK ABC TO :$.ABC;1 1 
28 11 ZTRX_PREPCC80 15 48 SELECT PART, CLASS FROM ABC FORMAT 'C:\ABC.TXT';2 2 
28 11 ZTRX_PREPCC80 15 50 DECLARE PP CURSOR FOR SELECT PART, CLASS FROM ABC;3 3 
28 11 ZTRX_PREPCC80 15 8 OPEN PP;4 4 
28 11 ZTRX_PREPCC80 15 25 GOTO 1 WHERE :RETVAL = 0;5 5 
28 11 ZTRX_PREPCC80 15 8 LABEL 2;6 6 
28 11 ZTRX_PREPCC80 15 28 FETCH PP INTO :PART, :CLASS;7 7 
28 11 ZTRX_PREPCC80 15 25 GOTO 3 WHERE :RETVAL = 0;8 8 
28 11 ZTRX_PREPCC80 15 53 UPDATE PARTPARAM SET ABC = :CLASS WHERE PART = :PART;9 9 
28 11 ZTRX_PREPCC80 15 7 LOOP 2;10 10 
28 11 ZTRX_PREPCC80 15 8 LABEL 3;11 11 
28 11 ZTRX_PREPCC80 15 9 CLOSE PP;12 12 
28 11 ZTRX_PREPCC80 15 8 LABEL 1;13 13 
28 11 ZTRX_PREPCC80 15 11 UNLINK ABC;14 14 
2 11 ZTRX_PREPCC80 1 21 Link directive fails.
2 11 ZTRX_PREPCC80 2 4 <P1>
17 10 ZTRX_RUNCC15 Run Cycle Count0 80 0 0 0 0 3 TMP0 0 
57 17 Inventory Control5 
58 5 10 ZTRX_RUNCC80 
7 10 ZTRX_RUNCC80 5 5 INPUT66 
9 10 ZTRX_RUNCC80 5 3 NOA0 0 3 INT2 1113 0 0 0 
9 10 ZTRX_RUNCC80 5 3 NOB0 0 3 INT1 613 0 0 0 
9 10 ZTRX_RUNCC80 5 3 NOC0 0 3 INT1 313 0 0 0 
7 10 ZTRX_RUNCC80 10 4 SQLI67 
28 10 ZTRX_RUNCC80 10 10 :TYP = '';1 1 
28 10 ZTRX_RUNCC80 10 8 :IT = 0;2 2 
28 10 ZTRX_RUNCC80 10 10 :LINE = 1;3 3 
28 10 ZTRX_RUNCC80 10 20 /******************/4 4 
28 10 ZTRX_RUNCC80 10 24 /* Link_THE_files     */5 5 
28 10 ZTRX_RUNCC80 10 27 LINK GENERALLOAD TO :$.LNK;6 6 
28 10 ZTRX_RUNCC80 10 28 ERRMSG 1 WHERE :RETVAL <= 0;7 7 
28 10 ZTRX_RUNCC80 10 27 LINK GENERALLOAD1 TO :$.GL;8 8 
28 10 ZTRX_RUNCC80 10 28 ERRMSG 1 WHERE :RETVAL <= 0;9 9 
28 10 ZTRX_RUNCC80 10 24 DELETE FROM GENERALLOAD;10 10 
28 10 ZTRX_RUNCC80 10 25 DELETE FROM GENERALLOAD1;11 11 
28 10 ZTRX_RUNCC80 10 20 /******************/12 12 
28 10 ZTRX_RUNCC80 10 11 :TYP = 'A';13 13 
28 10 ZTRX_RUNCC80 10 13 :IT = :$.NOA;14 14 
28 10 ZTRX_RUNCC80 10 11 GOSUB 1000;15 15 
28 10 ZTRX_RUNCC80 10 11 :TYP = 'B';16 16 
28 10 ZTRX_RUNCC80 10 13 :IT = :$.NOB;17 17 
28 10 ZTRX_RUNCC80 10 11 GOSUB 1000;18 18 
28 10 ZTRX_RUNCC80 10 11 :TYP = 'C';19 19 
28 10 ZTRX_RUNCC80 10 13 :IT = :$.NOC;20 20 
28 10 ZTRX_RUNCC80 10 11 GOSUB 1000;21 21 
28 10 ZTRX_RUNCC80 10 54 SELECT * FROM GENERALLOAD FORMAT 'C:\GENERALLOAD.TXT';22 22 
28 10 ZTRX_RUNCC80 10 11 GOSUB 2000;23 23 
28 10 ZTRX_RUNCC80 10 56 SELECT * FROM GENERALLOAD1 FORMAT 'C:\GENERALLOAD1.TXT';24 24 
28 10 ZTRX_RUNCC80 10 41 /* Run the interface on the linked file*/25 25 
28 10 ZTRX_RUNCC80 10 61 EXECUTE INTERFACE 'ZTRX_LOADCYCLE', SQL.TMPFILE, '-L', :$.GL;26 26 
28 10 ZTRX_RUNCC80 10 57 /* Insert the message that the interface gave to :PAR1 */27 27 
28 10 ZTRX_RUNCC80 10 38 SELECT MESSAGE INTO :PAR1 FROM ERRMSGS28 28 
28 10 ZTRX_RUNCC80 10 44 WHERE USER = ATOI(RSTRIND(SQL.CLIENTID,1,9))29 29 
28 10 ZTRX_RUNCC80 10 28 AND TYPE = 'i' AND LINE = 1;30 30 
28 10 ZTRX_RUNCC80 10 67 /* Display the message if any lines were not loaded successfully */31 31 
28 10 ZTRX_RUNCC80 10 51 ERRMSG 2 WHERE EXISTS (SELECT 'X' FROM GENERALLOAD132 32 
28 10 ZTRX_RUNCC80 10 34 WHERE LOADED <> 'Y' AND LINE > 0);33 33 
28 10 ZTRX_RUNCC80 10 19 UNLINK GENERALLOAD;34 34 
28 10 ZTRX_RUNCC80 10 20 UNLINK GENERALLOAD1;35 35 
28 10 ZTRX_RUNCC80 10 20 /*******************36 36 
28 10 ZTRX_RUNCC80 10 20 *******************/37 37 
28 10 ZTRX_RUNCC80 10 6 /****/38 38 
28 10 ZTRX_RUNCC80 10 9 SUB 1000;39 39 
28 10 ZTRX_RUNCC80 10 55 :THISWARHS = :I = :WARHS = :PART = :CUST = :SERIAL = 0;40 40 
28 10 ZTRX_RUNCC80 10 28 /**************************/41 41 
28 10 ZTRX_RUNCC80 10 20 INSERT INTO WARHSBAL42 42 
28 10 ZTRX_RUNCC80 10 57 SELECT PARTPARAM.WARHS, 0, PART.PART, -1, SQL.DATE8, 0, 043 43 
28 10 ZTRX_RUNCC80 10 20 FROM PART, PARTPARAM44 44 
28 10 ZTRX_RUNCC80 10 32 WHERE PARTPARAM.PART = PART.PART45 45 
28 10 ZTRX_RUNCC80 10 24 AND PARTPARAM.ABC = :TYP46 46 
28 10 ZTRX_RUNCC80 10 20 AND PART.PART NOT IN47 47 
28 10 ZTRX_RUNCC80 10 28 (SELECT PART FROM WARHSBAL);48 48 
28 10 ZTRX_RUNCC80 10 32 /******************************/49 49 
28 10 ZTRX_RUNCC80 10 20 DECLARE C CURSOR FOR50 50 
28 10 ZTRX_RUNCC80 10 22 SELECT PARTPARAM.PART,51 51 
28 10 ZTRX_RUNCC80 10 15 WARHSBAL.WARHS,52 52 
28 10 ZTRX_RUNCC80 10 14 WARHSBAL.CUST,53 53 
28 10 ZTRX_RUNCC80 10 15 WARHSBAL.SERIAL54 54 
28 10 ZTRX_RUNCC80 10 63 FROM PART, PARTPARAM, PARTSPEC, WARHSBAL, WAREHOUSES, PARTSTATS55 55 
28 10 ZTRX_RUNCC80 10 32 WHERE PARTPARAM.PART = PART.PART56 56 
28 10 ZTRX_RUNCC80 10 38 AND PART.PARTSTAT = PARTSTATS.PARTSTAT57 57 
28 10 ZTRX_RUNCC80 10 34 AND PARTPARAM.PART = WARHSBAL.PART58 58 
28 10 ZTRX_RUNCC80 10 34 AND PARTPARAM.PART = PARTSPEC.PART59 59 
28 10 ZTRX_RUNCC80 10 37 AND WARHSBAL.WARHS = WAREHOUSES.WARHS60 60 
28 10 ZTRX_RUNCC80 10 33 AND PARTSTATS.INACTIVEFLAG <> 'Y'61 61 
28 10 ZTRX_RUNCC80 10 30 AND WAREHOUSES.INACTIVE <> 'Y'62 62 
28 10 ZTRX_RUNCC80 10 22 AND PARTPARAM.PART > 063 63 
28 10 ZTRX_RUNCC80 10 23 AND WARHSBAL.WARHS <> 064 64 
28 10 ZTRX_RUNCC80 10 24 AND PARTPARAM.ABC = :TYP65 65 
28 10 ZTRX_RUNCC80 10 25 AND PARTSPEC.SPEC5 <> 'X'66 66 
28 10 ZTRX_RUNCC80 10 44 /* ------- START BY IANB 11/11/09 ------- */67 67 
28 10 ZTRX_RUNCC80 10 25 AND WAREHOUSES.TYPE = 'D'68 68 
28 10 ZTRX_RUNCC80 10 43 /* -------- END BY IAN 11/11/09 -------- */69 69 
28 10 ZTRX_RUNCC80 10 24 ORDER BY WARHSBAL.WARHS;70 70 
28 10 ZTRX_RUNCC80 10 7 OPEN C;71 71 
28 10 ZTRX_RUNCC80 10 11 LABEL 1001;72 72 
28 10 ZTRX_RUNCC80 10 43 FETCH C INTO :PART, :WARHS, :CUST, :SERIAL;73 73 
28 10 ZTRX_RUNCC80 10 29 GOTO 1900 WHERE :RETVAL <= 0;74 74 
28 10 ZTRX_RUNCC80 10 33 SELECT :I + 1 INTO :I FROM DUMMY;75 75 
28 10 ZTRX_RUNCC80 10 23 INSERT INTO GENERALLOAD76 76 
28 10 ZTRX_RUNCC80 10 42 (RECORDTYPE, LINE, INT1, INT2, INT3, INT4)77 77 
28 10 ZTRX_RUNCC80 10 6 VALUES78 78 
28 10 ZTRX_RUNCC80 10 44 ('1', :LINE, :PART, :WARHS, :CUST, :SERIAL);79 79 
28 10 ZTRX_RUNCC80 10 11 GOSUB 3000;80 80 
28 10 ZTRX_RUNCC80 10 51 UPDATE PARTSPEC SET SPEC5 = 'X' WHERE PART = :PART;81 81 
28 10 ZTRX_RUNCC80 10 25 GOTO 1900 WHERE :I = :IT;82 82 
28 10 ZTRX_RUNCC80 10 10 LOOP 1001;83 83 
28 10 ZTRX_RUNCC80 10 11 LABEL 1900;84 84 
28 10 ZTRX_RUNCC80 10 25 GOTO 1999 WHERE :I = :IT;85 85 
28 10 ZTRX_RUNCC80 10 40 /* LESS THAN REQUESTED ITEMS SELECTED */86 86 
28 10 ZTRX_RUNCC80 10 30 UPDATE PARTSPEC SET SPEC5 = ''87 87 
28 10 ZTRX_RUNCC80 10 13 WHERE PART IN88 88 
28 10 ZTRX_RUNCC80 10 46 (SELECT PART FROM PARTPARAM WHERE ABC = :TYP);89 89 
28 10 ZTRX_RUNCC80 10 11 LABEL 1999;90 90 
28 10 ZTRX_RUNCC80 10 9 CLOSE C ;91 91 
28 10 ZTRX_RUNCC80 10 7 RETURN;92 92 
28 10 ZTRX_RUNCC80 10 20 /*******************93 93 
28 10 ZTRX_RUNCC80 10 20 *******************/94 94 
28 10 ZTRX_RUNCC80 10 6 /****/95 95 
28 10 ZTRX_RUNCC80 10 9 SUB 2000;96 96 
28 10 ZTRX_RUNCC80 10 10 :LINE = 1;97 97 
28 10 ZTRX_RUNCC80 10 55 :THISWARHS = :I = :WARHS = :PART = :CUST = :SERIAL = 0;98 98 
28 10 ZTRX_RUNCC80 10 20 DECLARE D CURSOR FOR99 99 
28 10 ZTRX_RUNCC80 10 29 SELECT INT1, INT2, INT3, INT4100 100 
28 10 ZTRX_RUNCC80 10 16 FROM GENERALLOAD101 101 
28 10 ZTRX_RUNCC80 10 14 WHERE LINE > 0102 102 
28 10 ZTRX_RUNCC80 10 11 ORDER BY 2;103 103 
28 10 ZTRX_RUNCC80 10 7 OPEN D;104 104 
28 10 ZTRX_RUNCC80 10 11 LABEL 2001;105 105 
28 10 ZTRX_RUNCC80 10 43 FETCH D INTO :PART, :WARHS, :CUST, :SERIAL;106 106 
28 10 ZTRX_RUNCC80 10 29 GOTO 2999 WHERE :RETVAL <= 0;107 107 
28 10 ZTRX_RUNCC80 10 36 GOTO 2010 WHERE :WARHS = :THISWARHS;108 108 
28 10 ZTRX_RUNCC80 10 41 SELECT :WARHS INTO :THISWARHS FROM DUMMY;109 109 
28 10 ZTRX_RUNCC80 10 27 :WARHSNAME = :LOCNAME = '';110 110 
28 10 ZTRX_RUNCC80 10 25 SELECT WARHSNAME, LOCNAME111 111 
28 10 ZTRX_RUNCC80 10 25 INTO :WARHSNAME, :LOCNAME112 112 
28 10 ZTRX_RUNCC80 10 15 FROM WAREHOUSES113 113 
28 10 ZTRX_RUNCC80 10 21 WHERE WARHS = :WARHS;114 114 
28 10 ZTRX_RUNCC80 10 24 INSERT INTO GENERALLOAD1115 115 
28 10 ZTRX_RUNCC80 10 39 (RECORDTYPE, LINE, TEXT1, TEXT2, DATE1)116 116 
28 10 ZTRX_RUNCC80 10 6 VALUES117 117 
28 10 ZTRX_RUNCC80 10 46 ('1', :LINE, :WARHSNAME, :LOCNAME, SQL.DATE8);118 118 
28 10 ZTRX_RUNCC80 10 11 GOSUB 3000;119 119 
28 10 ZTRX_RUNCC80 10 11 LABEL 2010;120 120 
28 10 ZTRX_RUNCC80 10 40 :PARTAME = :CUSTNAME = :SERIALNAME = '';121 121 
28 10 ZTRX_RUNCC80 10 7 :Q = 0;122 122 
28 10 ZTRX_RUNCC80 10 30 SELECT PARTNAME INTO :PARTNAME123 123 
28 10 ZTRX_RUNCC80 10 29 FROM PART WHERE PART = :PART;124 124 
28 10 ZTRX_RUNCC80 10 30 SELECT CUSTNAME INTO :CUSTNAME125 125 
28 10 ZTRX_RUNCC80 10 34 FROM CUSTOMERS WHERE CUST = :CUST;126 126 
28 10 ZTRX_RUNCC80 10 34 SELECT SERIALNAME INTO :SERIALNAME127 127 
28 10 ZTRX_RUNCC80 10 35 FROM SERIAL WHERE SERIAL = :SERIAL;128 128 
28 10 ZTRX_RUNCC80 10 22 SELECT BALANCE INTO :Q129 129 
28 10 ZTRX_RUNCC80 10 13 FROM WARHSBAL130 130 
28 10 ZTRX_RUNCC80 10 20 WHERE WARHS = :WARHS131 131 
28 10 ZTRX_RUNCC80 10 16 AND PART = :PART132 132 
28 10 ZTRX_RUNCC80 10 16 AND CUST = :CUST133 133 
28 10 ZTRX_RUNCC80 10 20 AND SERIAL =:SERIAL;134 134 
28 10 ZTRX_RUNCC80 10 24 INSERT INTO GENERALLOAD1135 135 
28 10 ZTRX_RUNCC80 10 45 (RECORDTYPE, LINE, TEXT3, TEXT4, TEXT5, INT1)136 136 
28 10 ZTRX_RUNCC80 10 6 VALUES137 137 
28 10 ZTRX_RUNCC80 10 52 ('2', :LINE, :PARTNAME, :CUSTNAME, :SERIALNAME, :Q);138 138 
28 10 ZTRX_RUNCC80 10 11 GOSUB 3000;139 139 
28 10 ZTRX_RUNCC80 10 10 LOOP 2001;140 140 
28 10 ZTRX_RUNCC80 10 12 LABEL 2999 ;141 141 
28 10 ZTRX_RUNCC80 10 9 CLOSE D ;142 142 
28 10 ZTRX_RUNCC80 10 7 RETURN;143 143 
28 10 ZTRX_RUNCC80 10 20 /*******************144 144 
28 10 ZTRX_RUNCC80 10 20 *******************/145 145 
28 10 ZTRX_RUNCC80 10 6 /****/146 146 
28 10 ZTRX_RUNCC80 10 9 SUB 3000;147 147 
28 10 ZTRX_RUNCC80 10 39 SELECT :LINE + 1 INTO :LINE FROM DUMMY;148 148 
28 10 ZTRX_RUNCC80 10 7 RETURN;149 149 
9 10 ZTRX_RUNCC80 10 2 GL0 0 4 FILE0 0 0 0 0 
9 10 ZTRX_RUNCC80 10 3 LNK0 0 4 FILE0 0 0 0 0 
9 10 ZTRX_RUNCC80 10 3 NOA0 0 3 INT0 13 0 0 0 
9 10 ZTRX_RUNCC80 10 3 NOB0 0 3 INT0 13 0 0 0 
9 10 ZTRX_RUNCC80 10 3 NOC0 0 3 INT0 13 0 0 0 
EOF
echo End of Upgrade 7.0.23063
